---
- name: 'assert | Ensure _sat_quiet_assert is defined properly'
  ansible.builtin.assert:
    that:
      - "lookup('ansible.builtin.vars', __t_var) is defined"
      - "lookup('ansible.builtin.vars', __t_var) is boolean"
      - "lookup('ansible.builtin.vars', __t_var) | bool | string == lookup('ansible.builtin.vars', __t_var) | string"
    success_msg: "Variable '{{ __t_var }}' defined properly - value: '{{ lookup('ansible.builtin.vars', __t_var) }}'"
    fail_msg: "Variable '{{ __t_var }}' failed to validate"
    quiet: '{{ _sat_quiet_assert | default(false) }}'
  loop:
    - '_sat_quiet_assert'
  loop_control:
    loop_var: '__t_var'

- name: 'assert | Ensure secret string variables are defined properly'
  ansible.builtin.assert:
    that:
      - "lookup('ansible.builtin.vars', __t_var) is defined"
      - "lookup('ansible.builtin.vars', __t_var) is string"
      - "lookup('ansible.builtin.vars', __t_var) != None"
      - "lookup('ansible.builtin.vars', __t_var) != ''"
    success_msg: "Variable '{{ __t_var }}' defined properly - value: '{{ lookup('ansible.builtin.vars', __t_var) }}'"
    fail_msg: "Variable '{{ __t_var }}' failed to validate"
    quiet: '{{ _sat_quiet_assert }}'
  no_log: true
  loop:
    - '_satellite_password'
    - '_satellite_username'
  loop_control:
    loop_var: '__t_var'

- name: 'assert | Ensure Satellite server URL has a valid scheme (http/https) set'
  ansible.builtin.assert:
    that:
      - "_satellite_server_url | ansible.builtin.urlsplit('scheme') is search('^https?$')"
    success_msg: 'Variable _satellite_server_url has a valid scheme set.'
    fail_msg: 'Variable _satellite_server_url has no valid scheme (http/https) set.'
    quiet: '{{ _sat_quiet_assert }}'

- name: 'assert | Ensure Global Parameters are defined properly'
  ansible.builtin.assert:
    that:
      # name is defined for all parameters
      - >-
        _sat_global_parameters |
        selectattr('name', 'undefined') |
        length == 0

      # name is string
      - >-
        _sat_global_parameters |
        rejectattr('name', 'string') |
        length == 0

      # name not empty
      - >-
        _sat_global_parameters |
        selectattr('name', '==', '') |
        length == 0

      # name not None
      - >-
        _sat_global_parameters |
        selectattr('name', '==', 'None') |
        length == 0

      # value is defined for all parameters
      # value can have all sorts of values, therefore checking for a type is not feasible
      - >-
        _sat_global_parameters |
        selectattr('value', 'undefined') |
        length == 0

      # parameter_type is string (when defined)
      - >-
        (
          _sat_global_parameters |
          selectattr('parameter_type', 'defined') |
          length > 0
        ) | ansible.builtin.ternary(
          _sat_global_parameters |
          selectattr('parameter_type', 'defined') |
          selectattr('parameter_type', 'string') |
          length
          ==
          _sat_global_parameters |
          selectattr('parameter_type', 'defined') |
          length,
          true
        )

      # parameter_type is not empty (when defined)
      - >-
        (
          _sat_global_parameters |
          selectattr('parameter_type', 'defined') |
          length > 0
        ) | ansible.builtin.ternary(
          _sat_global_parameters |
          selectattr('parameter_type', 'defined') |
          selectattr('parameter_type', '==', '') |
          length == 0,
          true
        )

      # parameter_type is not None (when defined)
      - >-
        (
          _sat_global_parameters |
          selectattr('parameter_type', 'defined') |
          length > 0
        ) | ansible.builtin.ternary(
          _sat_global_parameters |
          selectattr('parameter_type', 'defined') |
          selectattr('parameter_type', '==', 'None') |
          length == 0,
          true
        )

      # parameter_type is known (when defined)
      - >-
        (
          _sat_global_parameters |
          selectattr('parameter_type', 'defined') |
          length > 0
        ) | ansible.builtin.ternary(
          _sat_global_parameters |
          selectattr('parameter_type', 'defined') |
          selectattr('parameter_type', 'in', _sat_allowed_parameter_types) |
          length
          ==
          _sat_global_parameters |
          selectattr('parameter_type', 'defined') |
          length,
          true
        )

      # hidden_value is boolean (when defined)
      - >-
        (
          _sat_global_parameters |
          selectattr('hidden_value', 'defined') |
          length > 0
        ) | ansible.builtin.ternary(
          _sat_global_parameters |
          selectattr('hidden_value', 'defined') |
          selectattr('hidden_value', 'boolean') |
          length
          ==
          _sat_global_parameters |
          selectattr('hidden_value', 'defined') |
          length,
          true
        )

    success_msg: 'All Global Parameters are properly defined'
    fail_msg: 'One or more Global Parameters failed validation'
    quiet: '{{ _sat_quiet_assert }}'
...
